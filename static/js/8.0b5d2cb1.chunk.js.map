{"version":3,"sources":["Chat/chat-block.jsx","Chat/chat-util.js","Firebase/index.js","Chat/chat.jsx"],"names":["ChatBlock","className","this","props","name","isMine","message","React","Component","prefixSet","nameSet","getRandomInt","max","Math","floor","random","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","xss","require","Chat","state","chatId","displayName","chatValue","chatlogs","uid","a","messageRef","collection","query","orderBy","limit","initializeUid","initializeDisplayName","initializeChatServer","Promise","resolve","reject","onSnapshot","snapshot","forEach","doc","filteredData","data","Object","keys","key","push","setState","prefix","length","e","originLength","newLength","target","value","add","text","createdAt","Date","toISOString","map","chat","index","type","onChange","setChatValue","bind","onClick","onSubmit"],"mappings":"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","file":"static/js/8.0b5d2cb1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style-chat.scss\";\n\nclass ChatBlock extends React.Component {\n  isMyChat() {\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"chat\">\n        <div className=\"user-photo\">\n          <div className=\"user-name\">{this.props.name}</div>\n        </div>\n        <p className={\"chat-msg \" + (this.props.isMine ? \"me \" : \"friend \")}>\n          {this.props.message}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ChatBlock;\n","const prefixSet = [\n  \"겁먹은\",\n  \"신난\",\n  \"무서운\",\n  \"화난\",\n  \"똑똑한\",\n  \"귀여운\",\n  \"행복한\",\n  \"혼란한\",\n  \"절거운\",\n];\n\nconst nameSet = [\n  \"아기돼지\",\n  \"김종문\",\n  \"신대장\",\n  \"김호들\",\n  \"유느님\",\n  \"피오\",\n  \"천해명\",\n  \"장기두\",\n  \"왕희열\",\n  \"조마테오\",\n  \"오지구\",\n  \"장그래\",\n  \"조근만\",\n  \"앙헬헌트\",\n  \"김태임\",\n  \"칠복\",  \n  \"이병원\",\n  \"이병실\",\n  \"최희망\",\n  \"이연구\",\n  \"사자회\",\n];\n\nconst getRandomInt = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nexport { prefixSet, nameSet, getRandomInt };\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDtWWsADaITFWHm_r80wWsrVvSr_sDfrAo\",\n  authDomain: \"great-award.firebaseapp.com\",\n  databaseURL: \"https://great-award-default-rtdb.firebaseio.com\",\n  projectId: \"great-award\",\n  storageBucket: \"great-award.appspot.com\",\n  messagingSenderId: \"947294552913\",\n  appId: \"1:947294552913:web:f7cdaa4730cb4c4c5ac970\",\n});\n\nexport const getTimestamp = () => {\n  return firebase.firestore.fieldValue.getTimestamp()\n}\nexport const firestore = firebase.firestore();\n","import React from \"react\";\nimport \"./style-chat.scss\";\n\nimport ChatBlock from \"./chat-block\";\nimport { prefixSet, nameSet, getRandomInt } from \"./chat-util\";\nimport { firestore } from \"../Firebase\";\nimport { uid } from \"uid\";\n\nlet xss = require(\"xss\");\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chatId: \"\",\n      displayName: \"\",\n      chatValue: \"\",\n      chatlogs: [],\n      uid: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    this.firestore = firestore;\n    this.messageRef = this.firestore.collection(\"message\");\n    this.query = this.messageRef.orderBy(\"createdAt\").limit(200);\n\n    await this.initializeUid();\n    await this.initializeDisplayName();\n    await this.initializeChatServer();\n  }\n\n  initializeChatServer() {\n    return new Promise((resolve, reject) => {\n\n      this.query.onSnapshot((snapshot) => {\n        const chatlogs = [];\n        snapshot.forEach((doc) => {\n          let filteredData = {};\n          const data = doc.data();\n          Object.keys(data).forEach((key) => {\n            filteredData[key] = xss(data[key]);\n          });\n          chatlogs.push(filteredData);\n        });\n        this.setState({ chatlogs });\n      });\n      resolve();\n    });\n  }\n\n  initializeUid() {\n    return new Promise((resolve, reject) => {\n      this.setState({ uid: uid() }, () => {\n        resolve();\n      });\n    });\n  }\n\n  initializeDisplayName() {\n    return new Promise((resolve, reject) => {\n      const prefix = prefixSet[getRandomInt(prefixSet.length)];\n      const name = nameSet[getRandomInt(nameSet.length)];\n\n      this.setState({ displayName: prefix + name }, () => {\n        resolve(this.state.displayName);\n      });\n    });\n  }\n\n  setChatValue(e) {\n    const originLength = this.state.chatValue.length\n    const newLength = e.target.value.length\n    if (this.state.chatValue.length > 100 && originLength <= newLength) return;\n    const chatValue = xss(e.target.value);\n    this.setState({ chatValue });\n  }\n\n  async onSubmit() {\n    await this.messageRef.add({\n      text: this.state.chatValue,\n      name: this.state.displayName,\n      uid: this.state.uid,\n      createdAt: new Date().toISOString()\n    })\n\n    this.setState({ chatValue: \"\" });\n  }\n\n  render() {\n    return (\n      <div className=\"chat-background\">\n        <div className=\"chat-box\">\n          <div className=\"chat-logs\">\n            {this.state.chatlogs.map((chat, index) => {\n              const isMine = chat.name === this.state.displayName;\n\n              return (\n                <ChatBlock\n                  key={index}\n                  isMine={isMine}\n                  name={chat.name}\n                  message={chat.text}\n                />\n              );\n            })}\n          </div>\n          <div className=\"chat-form\">\n            <input\n              className=\"chat-text\"\n              type=\"text\"\n              value={this.state.chatValue}\n              onChange={this.setChatValue.bind(this)}\n            ></input>\n            <button\n              className=\"chat-btn--snd\"\n              onClick={this.onSubmit.bind(this)}\n            >\n              <i className=\"fas fa-keyboard\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n"],"sourceRoot":""}