{"version":3,"sources":["Navbar/model-navbar.js","Navbar/navbar.jsx","App.js","reportWebVitals.js","Spinner/spinner.jsx","index.js"],"names":["menulist","name","link","icon","Navbar","props","state","isMenuToggleOn","e","stopPropagation","this","setState","className","to","onClick","closeNavbar","bind","map","menu","index","toggleMenu","React","Component","Home","lazy","Actors","Winner","Vote","Chat","App","navbarRef","useRef","ref","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Spinner","viewBox","xmlns","cx","cy","r","ReactDOM","render","fallback","StrictMode","document","getElementById"],"mappings":"ySAAMA,EAAW,CACf,CACEC,KAAM,SACNC,KAAM,iBACNC,KAAM,aAER,CACEF,KAAM,OACNC,KAAM,QACNC,KAAM,eAER,CACEF,KAAM,SACNC,KAAM,UACNC,KAAM,YAER,CACEF,KAAM,OACNC,KAAM,QACNC,KAAM,gB,eCsDKC,E,kDAnEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXN,WACAO,gBAAgB,GAJD,E,8CAQnB,SAAWC,GACTA,EAAEC,kBAEFC,KAAKC,UAAS,kBAAyB,CACrCJ,gBADY,EAAGA,qB,yBAKnB,WACEG,KAAKC,SAAS,CACZJ,gBAAgB,M,oBAIpB,WAAU,IAAD,OACP,OACE,iCACE,sBAAKK,UAAU,YAAf,UACE,cAAC,IAAD,CAAMC,GAAG,eAAeC,QAASJ,KAAKK,YAAYC,KAAKN,MAAvD,SACE,qBAAIE,UAAU,OAAd,kBACO,+CAGT,qBACEA,UACE,aACCF,KAAKJ,MAAMC,eAAiB,kBAAoB,KAHrD,SAME,6BACGG,KAAKJ,MAAMN,SAASiB,KAAI,SAACC,EAAMC,GAC9B,OACE,6BACE,eAAC,IAAD,CAAMN,GAAIK,EAAKhB,KAAMY,QAAS,EAAKC,YAAYC,KAAK,GAApD,UACE,mBACEJ,UAAW,OAASM,EAAKf,KAAO,qBAEjCe,EAAKjB,SALDkB,UAajB,qBAAKP,UAAU,cAAcE,QAASJ,KAAKU,WAAWJ,KAAKN,MAA3D,SACE,qBACEE,UACE,cACCF,KAAKJ,MAAMC,eAAiB,mBAAqB,kB,GA1D7Cc,IAAMC,WCCrBC,G,MAAOC,gBAAK,kBAAM,iCAClBC,EAASD,gBAAK,kBAAM,gCACpBE,EAASF,gBAAK,kBAAM,gCACpBG,EAAOH,gBAAK,kBAAM,sDAClBI,EAAOJ,gBAAK,kBAAM,6DAqBTK,EAnBH,WACV,IAAMC,EAAYC,mBAElB,OACE,qBAAKnB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQoB,IAAKF,IACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,iBAAiBC,UAAWT,IAC9C,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,UAAUC,UAAWV,IACvC,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,QAAQC,UAAWR,IACrC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,QAAQC,UAAWP,IACrC,cAAC,IAAD,CAAOO,UAAWZ,aCZba,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCYCQ,G,kKAfb,WACE,OACE,qBAAKjC,UAAU,kBAAf,SACE,qBACEA,UAAU,UACVkC,QAAQ,cACRC,MAAM,6BAHR,SAKE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,e,GATd7B,IAAMC,YCK5B6B,IAASC,OACP,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.5ccbed86.chunk.js","sourcesContent":["const menulist = [\n  {\n    name: \"Weekly\",\n    link: \"/weekly-winner\",\n    icon: \"fa-trophy\",\n  },\n  {\n    name: \"Vote\",\n    link: \"/vote\",\n    icon: \"fa-vote-yea\",\n  },\n  {\n    name: \"Actors\",\n    link: \"/actors\",\n    icon: \"fa-users\",\n  },\n  {\n    name: \"Chat\",\n    link: \"/chat\",\n    icon: \"fa-comments\",\n  },\n];\n\nexport { menulist };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { menulist } from \"./model-navbar\";\nimport \"./style-navbar.scss\";\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menulist,\n      isMenuToggleOn: false,\n    };\n  }\n\n  toggleMenu(e) {\n    e.stopPropagation();\n\n    this.setState(({ isMenuToggleOn }) => ({\n      isMenuToggleOn: !isMenuToggleOn,\n    }));\n  }\n\n  closeNavbar() {\n    this.setState({\n      isMenuToggleOn: false,\n    });\n  }\n\n  render() {\n    return (\n      <header>\n        <div className=\"container\">\n          <Link to=\"/great-award\" onClick={this.closeNavbar.bind(this)}>\n            <h1 className=\"logo\">\n              great<span>awards</span>\n            </h1>\n          </Link>\n          <nav\n            className={\n              \"site-nav \" +\n              (this.state.isMenuToggleOn ? \"site-nav--open \" : \" \")\n            }\n          >\n            <ul>\n              {this.state.menulist.map((menu, index) => {\n                return (\n                  <li key={index}>\n                    <Link to={menu.link} onClick={this.closeNavbar.bind(this)}>\n                      <i\n                        className={\" fa \" + menu.icon + \" site-nav--icon \"}\n                      ></i>\n                      {menu.name}\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </nav>\n\n          <div className=\"menu-toggle\" onClick={this.toggleMenu.bind(this)}>\n            <div\n              className={\n                \"hamburger \" +\n                (this.state.isMenuToggleOn ? \"hamburger--open \" : \" \")\n              }\n            ></div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Navbar;\n","import { lazy, useRef } from \"react\";\nimport { Switch, Route, MemoryRouter as Router } from \"react-router-dom\";\nimport Navbar from \"./Navbar/navbar\";\n\nimport \"./App.css\";\n\nconst Home = lazy(() => import(\"./Home/home\"));\nconst Actors = lazy(() => import(\"./Actors/actors\"));\nconst Winner = lazy(() => import(\"./WeeklyWinner/winner\"));\nconst Vote = lazy(() => import(\"./Vote/vote\"));\nconst Chat = lazy(() => import(\"./Chat/chat\"));\n\nconst App = () => {\n  const navbarRef = useRef();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Navbar ref={navbarRef}></Navbar>\n        <Switch>\n          <Route exact path=\"/weekly-winner\" component={Winner} />\n          <Route exact path=\"/actors\" component={Actors} />\n          <Route exact path=\"/vote\" component={Vote} />\n          <Route exact path=\"/chat\" component={Chat} />\n          <Route component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"./style-spinner.scss\";\n\nclass Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"spinner-wrapper\">\n        <svg\n          className=\"spinner\"\n          viewBox=\"0 0 100 100\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"50\" cy=\"50\" r=\"45\" />\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport Spinner from \"./Spinner/spinner\";\n\nReactDOM.render(\n  <Suspense fallback={<Spinner />}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Suspense>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}