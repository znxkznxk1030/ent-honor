{"version":3,"sources":["mock-data/actors.js","Vote/vote.jsx"],"names":["actors","id","name","nickname","src","comment","actorBgImgList","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","Vote","props","state","selectedActorId","modalIsOpen","e","console","log","target","value","this","setState","preventDefault","className","map","actor","type","onChange","onChangeValue","bind","checked","htmlFor","onClick","openModal","isOpen","onAfterOpen","afterOpenModal","onRequestClose","closeModal","style","contentLabel","React","Component"],"mappings":"mHAAA,wEAAMA,EAAS,CACb,CACEC,GAAI,IACJC,KAAM,uBACNC,SAAU,4BACVC,IAAK,mDACLC,QAAS,sCAEX,CACEJ,GAAI,IACJC,KAAM,uBACNC,SAAU,uBACVC,IAAK,gDACLC,QAAS,4CAEX,CACEJ,GAAI,IACJC,KAAM,uBACNC,SAAU,uBACVC,IAAK,iDACLC,QAAS,iCAEX,CACEJ,GAAI,IACJC,KAAM,gBACNC,SAAU,uBACVC,IAAK,iDACLC,QAAS,sCAEX,CACEJ,GAAI,IACJC,KAAM,uBACNC,SAAU,uBACVC,IAAK,mDACLC,QAAS,4CAEX,CACEJ,GAAI,IACJC,KAAM,gBACNC,SAAU,iCACVC,IAAK,gDACLC,QAAS,wBAIPC,EAAiB,CACrB,CACEF,IAAK,kDAEP,CACEA,IAAK,iDAEP,CACEA,IAAK,kDAEP,CACEA,IAAK,kDAEP,CACEA,IAAK,iDAEP,CACEA,IAAK,mD,wJCxDHG,EAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIfC,IAAMC,cAAc,S,IACdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXnB,WACAoB,iBAAkB,EAClBC,aAAa,GANE,E,iDAUnB,SAAcC,GACZC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBC,KAAKC,SAAS,CAAER,gBAAiBE,EAAEG,OAAOC,U,uBAG5C,SAAUJ,GACRA,EAAEO,iBACFF,KAAKC,SAAS,CAAEP,aAAa,M,wBAG/B,WACEM,KAAKC,SAAS,CAAEP,aAAa,M,4BAG/B,c,oBAEA,WAAU,IAAD,OACP,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,mBAAGA,UAAU,aAAb,0BACA,wJAEF,qBAAKA,UAAU,YAAf,SACE,iCACGH,KAAKR,MAAMnB,OAAO+B,KAAI,SAACC,GACtB,IAAMZ,EAAkB,EAAKD,MAAMC,gBACnC,OACE,sBAAKU,UAAU,YAAf,UACE,uBACEG,KAAK,QACLhC,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZwB,MAAOM,EAAM/B,GAEbiC,SAAU,EAAKC,cAAcC,KAAK,GAClCC,QAASjB,IAAoBY,EAAM/B,IAF9B+B,EAAM/B,IAIb,uBAAOqC,QAASN,EAAM/B,GAAtB,SAA2B+B,EAAM9B,OACjC,yBAX8B8B,EAAM/B,OAgB1C,wBACE6B,UAAU,mBACVS,QAASZ,KAAKa,UAAUJ,KAAKT,MAF/B,gCAQJ,eAAC,IAAD,CACEc,OAAQd,KAAKR,MAAME,YACnBqB,YAAaf,KAAKgB,eAAeP,KAAKT,MACtCiB,eAAgBjB,KAAKkB,WAAWT,KAAKT,MACrCmB,MAAOvC,EACPwC,aAAa,gBALf,UAOE,uCACA,wBAAQR,QAASZ,KAAKkB,WAAWT,KAAKT,MAAtC,mBACA,+CACA,iCACE,oDACA,wD,GA3EOqB,IAAMC,WAmFVhC","file":"static/js/8.7f3e23c7.chunk.js","sourcesContent":["const actors = [\n  {\n    id: \"1\",\n    name: \"강 호 동\",\n    nickname: \"아기 돼지\",\n    src: \"https://assets.codepen.io/1328906/kang-001_1.png\",\n    comment: \"& 이래도 되나?\",\n  },\n  {\n    id: \"2\",\n    name: \"김 종 민\",\n    nickname: \"김 종 문\",\n    src: \"https://assets.codepen.io/1328906/min-001.png\",\n    comment: \"& 찾은거 같은데?\",\n  },\n  {\n    id: \"3\",\n    name: \"김 동 현\",\n    nickname: \"김 호 들\",\n    src: \"https://assets.codepen.io/1328906/hyun-001.png\",\n    comment: \"호 들 & 호 들\",\n  },\n  {\n    id: \"4\",\n    name: \"신 동\",\n    nickname: \"신 대 장\",\n    src: \"https://assets.codepen.io/1328906/dong-001.png\",\n    comment: \"보이시나요? & \",\n  },\n  {\n    id: \"5\",\n    name: \"유 병 재\",\n    nickname: \"유 느 님\",\n    src: \"https://assets.codepen.io/1328906/you-001png.png\",\n    comment: \"제가 해 볼게요 &\",\n  },\n  {\n    id: \"6\",\n    name: \"피 오\",\n    nickname: \"프로보필러\",\n    src: \"https://assets.codepen.io/1328906/pio-001.png\",\n    comment: \"형... 형! &\",\n  },\n];\n\nconst actorBgImgList = [\n  {\n    src: \"https://assets.codepen.io/1328906/kang-002.png\",\n  },\n  {\n    src: \"https://assets.codepen.io/1328906/min-002.png\",\n  },\n  {\n    src: \"https://assets.codepen.io/1328906/hyun-002.png\",\n  },\n  {\n    src: \"https://assets.codepen.io/1328906/dong-002.png\",\n  },\n  {\n    src: \"https://assets.codepen.io/1328906/you-003.png\",\n  },\n  {\n    src: \"https://assets.codepen.io/1328906/pio-002.png\",\n  },\n];\n\nexport { actors, actorBgImgList };\n","import React from \"react\";\nimport \"./style-vote.scss\";\n\nimport { actors } from \"../mock-data/actors\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\nclass Vote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actors,\n      selectedActorId: -1,\n      modalIsOpen: false,\n    };\n  }\n\n  onChangeValue(e) {\n    console.log(e.target.value);\n    this.setState({ selectedActorId: e.target.value });\n  }\n\n  openModal(e) {\n    e.preventDefault();\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  afterOpenModal() {}\n\n  render() {\n    return (\n      <div className=\"vote-background\">\n        <div className=\"vote-question\">\n          <p className=\"vote-title\"> 7 / 11 ??? </p>\n          <p> 이번주 가장 많이 활약한 멤버는 누구인가요? </p>\n        </div>\n        <div className=\"container\">\n          <form>\n            {this.state.actors.map((actor) => {\n              const selectedActorId = this.state.selectedActorId;\n              return (\n                <div className=\"vote-item\" key={actor.id}>\n                  <input\n                    type=\"radio\"\n                    id={actor.id}\n                    name={actor.name}\n                    value={actor.id}\n                    key={actor.id}\n                    onChange={this.onChangeValue.bind(this)}\n                    checked={selectedActorId === actor.id}\n                  ></input>\n                  <label htmlFor={actor.id}>{actor.name}</label>\n                  <br></br>\n                </div>\n              );\n            })}\n\n            <button\n              className=\"vote-btn--submit\"\n              onClick={this.openModal.bind(this)}\n            >\n              제 출\n            </button>\n          </form>\n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal.bind(this)}\n          onRequestClose={this.closeModal.bind(this)}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2>Hello</h2>\n          <button onClick={this.closeModal.bind(this)}>close</button>\n          <div>I am a modal</div>\n          <form>\n            <button>tab navigation</button>\n            <button>stays</button>\n          </form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Vote;\n"],"sourceRoot":""}